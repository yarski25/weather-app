name: CI/CD
on: [push] # defaults to main
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Install and Build 🔧
        run: |
          npm install
          npm run-script build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: build # The folder the action should deploy.
          token: ${{ secrets.DEPLOY_KEY }}
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
#       - name: Checkout 🛎️
#         uses: actions/checkout@v3
#         with:
#           ref: main
#           submodules: recursive

#       # An action to enable Pages and extract various metadata about a site.
#       # It can also be used to configure various static site generators we support as starter workflows.
#       - name: Setup Pages
#         uses: actions/configure-pages@v3

#       # This is used along with actions/deploy-pages as part of the official
#       # support for building Pages with Actions (currently in public beta for public repositories).
#       - name: Build
#         uses: actions/jekyll-build-pages@v1
#         with:
#           destination: "./build"

#       # Official support for building Pages with Actions is in public beta at the moment.
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v2
#         with:
#           path: "./build"

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       # This action is used to deploy Actions artifacts to GitHub Pages.
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v2
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}

# name: CI/CD
# on: [push]
# permissions:
#   contents: read
#   pages: write
#   id-token: write
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
#       - name: Checkout 🛎️
#         uses: actions/checkout@v3
#         with:
#           ref: main
#           submodules: recursive

#       # An action to enable Pages and extract various metadata about a site.
#       # It can also be used to configure various static site generators we support as starter workflows.
#       - name: Setup Pages
#         uses: actions/configure-pages@v3

#       # This is used along with actions/deploy-pages as part of the official
#       # support for building Pages with Actions (currently in public beta for public repositories).
#       - name: Build
#         uses: actions/jekyll-build-pages@v1
#         with:
#           destination: "./build"

#       # Official support for building Pages with Actions is in public beta at the moment.
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v2
#         with:
#           path: "./build"

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       # This action is used to deploy Actions artifacts to GitHub Pages.
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v2
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
# name: CI/CD
# on: [push]
# permissions:
#   contents: read
#   pages: write
#   id-token: write
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout 🛎️
#         uses: actions/checkout@v3
#         with:
#           ref: gh-pages
#           # repository: yarski25/weather-app
#           submodules: recursive
#           # ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

#       - name: Install SSH Client 🔑
#         uses: webfactory/ssh-agent@v0.8.0
#         with:
#           ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

#       - name: Install and Build 🔧 # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
#         run: |
#           npm install
#           npm run-script build
#         env:
#           REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
#           REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}

#       - name: Deploy 🚀
#         uses: JamesIves/github-pages-deploy-action@v4
#         with:
#           #repository-name: yarski25/yarski25.github.io
#           branch: gh-pages
#           folder: build
#           #target-folder: build
#           clean: true
#           clean-exclude: |
#             special-file.txt
#             some/*.txt
#           ssh-key: true

# name: CI/CD
# on: [push]

# permissions:
#   contents: read
#   pages: write
#   id-token: write

# jobs:
#   # Build job
#   build:
#     name: Build
#     concurrency: ci-${{ github.ref }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repo 🛎️
#         uses: actions/checkout@v3

#       - name: Install dependencies 🔧
#         run: npm ci

#       - name: Build 🔧
#         run: npm run build
#         env:
#           REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
#           REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}
#   # Deploy job
#   deploy:
#     name: Deploy
#     # Add a dependency to the build job
#     needs: build

#     # # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
#     # permissions:
#     #   pages: write # to deploy to Pages
#     #   id-token: write # to verify the deployment originates from an appropriate source

#     # # Deploy to the github-pages environment
#     # environment:
#     #   name: github-pages
#     #   url: ${{ steps.deployment.outputs.page_url }}

#     # Specify runner + deployment step
#     runs-on: ubuntu-latest
#     steps:
#       - name: Deploy to GitHub Pages
#         uses: JamesIves/github-pages-deploy-action@v4
#         with:
#           folder: build # The folder the action should deploy.

# # Name that will define how it shows up in
# # your Github Action overview for this repository
# name: CI/CD

# # Defines what events the workflow will listen to in repository
# # In this case commits and pull-requests on master-branch
# on:
#   push:
#     branches: [main]

# # What jobs will run in your workflow -> build_and_deploy
# # Jobs can run in parallel or sequentially
# jobs:
#   build_and_deploy:
#     # Type of runner that this job wil run on -> Linux Ubuntu
#     runs-on: ubuntu-latest

#     # Define which node version to use in the runner.
#     strategy:
#       matrix:
#         node-version: [16.x]

#     steps:
#       # Action that will checkout repository so the workflow can
#       # access the codebase
#       - name: Checkout repository
#         uses: actions/checkout@v2
#         with:
#           lfs: true
#           token: ${{ secrets.ACCESS_TOKEN }}

#         # Action allowing caching of node_modules to improve
#         # workflow execution time
#         # {{runner.os}} will use defined runner 'ubuntu-latest'
#       - name: Cache node_modules
#         uses: actions/cache@v2
#         env:
#           cache-name: cache-node-modules
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-build-${{ env.cache-name}}-${{hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-

#         # Sets node environment for use in action
#         # {{matrix.node-version}} will use Github default Node.js
#         # version
#       - name: Node ${{matrix.node-version}}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{matrix.node-version}}

#         # Run npm commands to install NPM packages
#       - name: Install dependencies
#         run: npm install

#         # Run npm build command for React project
#       - name: Build
#         run: npm run build

#         # Run npm deploy command
#       - name: Deploy
#         run: |
#           git config --global user.name ${{secrets.USER_NAME}}
#           git config --global user.email ${{secrets.USER_EMAIL}}
#           git remote set-url origin https://${{secrets.ACCESS_TOKEN}}@github.com/${{secrets.USER_NAME}}/weather-app
#           npm run deploy

# name: Build & deploy

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Installing Node.js
#         uses: actions/setup-node@v1
#         with:
#           node-version: 16.x

#       - name: Installing NPM packages
#         run: npm ci

#       - name: Building project
#         run: npm run build

#       # - name: Running tests
#       #   run: npm run test

#       - name: Uploading production-ready build files
#         uses: actions/upload-artifact@v2
#         with:
#           name: production-files
#           path: ./build

#   deploy:
#     name: Deploy
#     needs: build
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: Downloading artifact
#         uses: actions/download-artifact@v2
#         with:
#           name: production-files
#           path: ./build

#       - name: Deploying to gh-pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./build

# name: CI/CD

# on:
#   push:
#     branches:
#       - main
#   # pull_request:
#   #   branches:
#   #     - main

# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           # token: ${{ secrets.ACCESS_TOKEN }}
#           ref: gh-pages

#       - name: Installing Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 16.x

#       - name: Installing NPM packages
#         run: npm install

#       - name: Building project
#         run: npm run build

#       - name: Uploading production-ready build files
#         uses: actions/upload-artifact@v3
#         with:
#           name: production-files
#           path: ./build

#   deploy:
#     name: Deploy
#     needs: build
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: Downloading artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: production-files
#           path: ./build

#       - name: Deploying to gh-pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           # github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./build
